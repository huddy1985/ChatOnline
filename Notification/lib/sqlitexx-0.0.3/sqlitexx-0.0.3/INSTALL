Unix Build Instructions
-----------------------

make
make test
make install

Using the Intel Compiler instead of the GNU gcc
-----------------------------------------------

For example on a 64-bit platform:

. /opt/intel/Compiler/11.0/083/bin/iccvars.sh intel64
make CC=icc CCPP=icc
make CC=icc CCPP=icc test
make CC=icc CCPP=icc install

Using the Sun Studio 12 Forte Compiler
--------------------------------------

make CC=/opt/SUNWspro/bin/cc CCPP=/opt/SUNWspro/bin/CC
make CC=/opt/SUNWspro/bin/cc CCPP=/opt/SUNWspro/bin/CC test
make CC=/opt/SUNWspro/bin/cc CCPP=/opt/SUNWspro/bin/CC install

Windows Build Instructions
--------------------------

Use the Microsoft Visual Studio Command Line.

There is an unpacked minimal version ov sqlite-amalgamation-3_x_x.zip
installed in the sqlite-3.x.x subdirectory. Adapt the makefiles if
you want to link against a sqlite3.dll already installed on the system
or if you want to use a different version of sqlite.

Build using the following sequence:

nmake /nologo /f Makefile.W32
nmake /nologo /f Makefile.W32 test

The resulting header files and development library are
in 'include\sqlite3xx` and 'src\sqlite3xx.lib`

At the moment there is no packaging or DLL building.
Also the Windows build can't use the binary DLL versions
of sqlite3.dll yet without adapting the makefiles.
